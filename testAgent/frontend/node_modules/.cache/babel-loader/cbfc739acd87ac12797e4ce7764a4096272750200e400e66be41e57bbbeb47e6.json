{"ast":null,"code":"var _jsxFileName = \"/Users/varsaraf/Downloads/e2e-testing-agent/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { CheckCircle, XCircle, Clock, Lightbulb, Globe, User, Lock, Play, AlertCircle } from 'lucide-react';\nimport './App.css';\n\n// Types based on your backend models\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [instruction, setInstruction] = useState('');\n  const [clusterConfig, setClusterConfig] = useState({\n    ip: '',\n    username: '',\n    password: '',\n    url: ''\n  });\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [testSession, setTestSession] = useState(null);\n  const [executionSteps, setExecutionSteps] = useState([]);\n  const [showExamples, setShowExamples] = useState(false);\n\n  // Example instructions based on your templates\n  const exampleInstructions = [\"create network hierarchy with area 'TestArea' and building 'TestBuilding'\", \"create 3 L3VN for fabric 'TestFabric'\", \"add and provision 5 devices to fabric 'ProductionFabric'\", \"create fabric 'DemoFabric' with network hierarchy and provision devices\", \"login to cluster and verify home page accessibility\"];\n\n  // API calls to your existing backend\n  const executeTest = async () => {\n    if (!instruction.trim() || !clusterConfig.ip || !clusterConfig.username) {\n      alert('Please fill in all required fields');\n      return;\n    }\n    setIsExecuting(true);\n    setTestSession(null);\n    setExecutionSteps([]);\n    try {\n      // Step 1: Parse test instructions using your existing endpoint\n      const parseResponse = await fetch('http://localhost:8000/parse_test_instructions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: instruction,\n          url: clusterConfig.url || `https://${clusterConfig.ip}`,\n          username: clusterConfig.username,\n          password: clusterConfig.password\n        })\n      });\n      if (!parseResponse.ok) {\n        throw new Error(`Failed to parse instructions: ${parseResponse.statusText}`);\n      }\n      const parseResult = await parseResponse.json();\n      console.log('Parse result:', parseResult);\n\n      // Step 2: Execute the test plan\n      const sessionResponse = await fetch('http://localhost:8000/execute_test_plan', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session_id: parseResult.session_id\n        })\n      });\n      if (!sessionResponse.ok) {\n        throw new Error(`Failed to execute test: ${sessionResponse.statusText}`);\n      }\n      const sessionResult = await sessionResponse.json();\n      console.log('Session result:', sessionResult);\n\n      // Update UI with initial session info\n      setTestSession({\n        sessionId: parseResult.session_id,\n        status: 'parsing',\n        command: instruction,\n        workflows: parseResult.workflows || [],\n        errorMessage: undefined\n      });\n\n      // Step 3: Poll for execution status\n      pollExecutionStatus(parseResult.session_id);\n    } catch (error) {\n      console.error('Execution error:', error);\n      setTestSession({\n        sessionId: 'error',\n        status: 'failed',\n        command: instruction,\n        workflows: [],\n        errorMessage: error instanceof Error ? error.message : 'Unknown error occurred'\n      });\n    } finally {\n      setIsExecuting(false);\n    }\n  };\n  const pollExecutionStatus = async sessionId => {\n    const interval = setInterval(async () => {\n      try {\n        const response = await fetch('http://localhost:8000/get_session_status', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            session_id: sessionId\n          })\n        });\n        if (response.ok) {\n          const status = await response.json();\n          console.log('Status update:', status);\n          setTestSession(prev => ({\n            ...prev,\n            sessionId: sessionId,\n            status: status.status || 'executing',\n            command: instruction,\n            workflows: status.workflows || (prev === null || prev === void 0 ? void 0 : prev.workflows) || [],\n            errorMessage: status.error_message\n          }));\n\n          // Stop polling when test is complete\n          if (status.status === 'completed' || status.status === 'failed') {\n            clearInterval(interval);\n            if (status.steps) {\n              setExecutionSteps(status.steps);\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Status polling error:', error);\n        clearInterval(interval);\n      }\n    }, 3000); // Poll every 3 seconds\n\n    // Cleanup after 10 minutes\n    setTimeout(() => clearInterval(interval), 600000);\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'completed':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"w-5 h-5 text-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 32\n        }, this);\n      case 'failed':\n        return /*#__PURE__*/_jsxDEV(XCircle, {\n          className: \"w-5 h-5 text-red-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 29\n        }, this);\n      case 'executing':\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          className: \"w-5 h-5 text-blue-500 animate-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 32\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          className: \"w-5 h-5 text-gray-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 23\n        }, this);\n    }\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'completed':\n        return 'bg-green-50 border-green-200 text-green-800';\n      case 'failed':\n        return 'bg-red-50 border-red-200 text-red-800';\n      case 'executing':\n      case 'parsing':\n      case 'generating':\n        return 'bg-blue-50 border-blue-200 text-blue-800';\n      default:\n        return 'bg-gray-50 border-gray-200 text-gray-800';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold text-slate-800 mb-2\",\n          children: \"E2E Testing Agent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-slate-600 text-lg\",\n          children: \"Transform natural language commands into automated Playwright tests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-xl shadow-lg p-8 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-semibold text-slate-700 mb-3\",\n            children: \"Test Instruction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: instruction,\n              onChange: e => setInstruction(e.target.value),\n              placeholder: \"Describe what you want to test in natural language...\",\n              className: \"w-full h-32 px-4 py-3 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none text-slate-700\",\n              disabled: isExecuting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowExamples(!showExamples),\n              className: \"absolute top-3 right-3 p-2 text-slate-400 hover:text-slate-600 transition-colors\",\n              title: \"Show examples\",\n              children: /*#__PURE__*/_jsxDEV(Lightbulb, {\n                className: \"w-5 h-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), showExamples && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 p-4 bg-slate-50 rounded-lg border border-slate-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-sm font-semibold text-slate-700 mb-3\",\n              children: \"Example Instructions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: exampleInstructions.map((example, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setInstruction(example);\n                  setShowExamples(false);\n                },\n                className: \"block w-full text-left p-2 text-sm text-slate-600 hover:bg-white hover:text-slate-800 rounded transition-colors\",\n                children: example\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-slate-700 mb-4\",\n            children: \"Cluster Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-slate-600 mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(Globe, {\n                  className: \"w-4 h-4 inline mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 19\n                }, this), \"Cluster IP *\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: clusterConfig.ip,\n                onChange: e => setClusterConfig(prev => ({\n                  ...prev,\n                  ip: e.target.value\n                })),\n                placeholder: \"192.168.1.100\",\n                className: \"w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n                disabled: isExecuting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-slate-600 mb-2\",\n                children: \"Base URL (optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: clusterConfig.url,\n                onChange: e => setClusterConfig(prev => ({\n                  ...prev,\n                  url: e.target.value\n                })),\n                placeholder: \"https://cluster.example.com\",\n                className: \"w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n                disabled: isExecuting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-slate-600 mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(User, {\n                  className: \"w-4 h-4 inline mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 19\n                }, this), \"Username *\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: clusterConfig.username,\n                onChange: e => setClusterConfig(prev => ({\n                  ...prev,\n                  username: e.target.value\n                })),\n                placeholder: \"admin\",\n                className: \"w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n                disabled: isExecuting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-slate-600 mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(Lock, {\n                  className: \"w-4 h-4 inline mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 19\n                }, this), \"Password *\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                value: clusterConfig.password,\n                onChange: e => setClusterConfig(prev => ({\n                  ...prev,\n                  password: e.target.value\n                })),\n                placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n                className: \"w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n                disabled: isExecuting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: executeTest,\n            disabled: isExecuting || !instruction.trim() || !clusterConfig.ip || !clusterConfig.username,\n            className: \"inline-flex items-center px-8 py-4 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-all duration-200 transform hover:scale-105 disabled:transform-none\",\n            children: [/*#__PURE__*/_jsxDEV(Play, {\n              className: \"w-5 h-5 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), isExecuting ? 'Executing Test...' : 'Execute Test']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), testSession && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-xl shadow-lg p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-slate-700 mb-4\",\n          children: \"Test Execution Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-4 rounded-lg border mb-4 ${getStatusColor(testSession.status)}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [getStatusIcon(testSession.status), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 font-medium capitalize\",\n                children: testSession.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm\",\n              children: [\"Session: \", testSession.sessionId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), testSession.errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n              className: \"w-4 h-4 inline mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 19\n            }, this), testSession.errorMessage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-sm font-semibold text-slate-600 mb-2\",\n            children: \"Command Executed:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 bg-slate-50 rounded border text-sm text-slate-700\",\n            children: testSession.command\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this), testSession.workflows && testSession.workflows.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-sm font-semibold text-slate-600 mb-2\",\n            children: \"Detected Workflows:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-2\",\n            children: testSession.workflows.map((workflow, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm\",\n              children: workflow\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 15\n        }, this), executionSteps.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-sm font-semibold text-slate-600 mb-2\",\n            children: \"Execution Steps:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: executionSteps.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 border border-slate-200 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm font-medium\",\n                  children: step.workflow\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `px-2 py-1 rounded text-xs ${getStatusColor(step.status)}`,\n                  children: step.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-slate-600 mt-1\",\n                children: step.tddStep\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 23\n              }, this), step.errorDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-red-600 mt-1\",\n                children: step.errorDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mt-8 text-sm text-slate-500\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"E2E Testing Agent - Intelligent test automation with natural language commands\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"o3cAIbcADMUdROf3YSFvtnarVjo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CheckCircle","XCircle","Clock","Lightbulb","Globe","User","Lock","Play","AlertCircle","jsxDEV","_jsxDEV","App","_s","instruction","setInstruction","clusterConfig","setClusterConfig","ip","username","password","url","isExecuting","setIsExecuting","testSession","setTestSession","executionSteps","setExecutionSteps","showExamples","setShowExamples","exampleInstructions","executeTest","trim","alert","parseResponse","fetch","method","headers","body","JSON","stringify","prompt","ok","Error","statusText","parseResult","json","console","log","sessionResponse","session_id","sessionResult","sessionId","status","command","workflows","errorMessage","undefined","pollExecutionStatus","error","message","interval","setInterval","response","prev","error_message","clearInterval","steps","setTimeout","getStatusIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","getStatusColor","children","value","onChange","e","target","placeholder","disabled","onClick","title","map","example","index","type","length","workflow","step","tddStep","errorDetails","_c","$RefreshReg$"],"sources":["/Users/varsaraf/Downloads/e2e-testing-agent/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { \n  CheckCircle, \n  XCircle, \n  Clock, \n  Lightbulb, \n  Globe, \n  User, \n  Lock, \n  Play, \n  AlertCircle \n} from 'lucide-react';\nimport './App.css';\n\n// Types based on your backend models\ninterface ClusterConfig {\n  ip: string;\n  username: string;\n  password: string;\n  url: string;\n}\n\ninterface TestSession {\n  sessionId: string;\n  status: 'created' | 'parsing' | 'generating' | 'executing' | 'completed' | 'failed';\n  command: string;\n  workflows: string[];\n  errorMessage?: string;\n}\n\ninterface ExecutionStep {\n  stepId: string;\n  workflow: string;\n  tddStep: string;\n  status: string;\n  timestamp: string;\n  errorDetails?: string;\n}\n\nconst App: React.FC = () => {\n  const [instruction, setInstruction] = useState('');\n  const [clusterConfig, setClusterConfig] = useState<ClusterConfig>({\n    ip: '',\n    username: '',\n    password: '',\n    url: ''\n  });\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [testSession, setTestSession] = useState<TestSession | null>(null);\n  const [executionSteps, setExecutionSteps] = useState<ExecutionStep[]>([]);\n  const [showExamples, setShowExamples] = useState(false);\n\n  // Example instructions based on your templates\n  const exampleInstructions = [\n    \"create network hierarchy with area 'TestArea' and building 'TestBuilding'\",\n    \"create 3 L3VN for fabric 'TestFabric'\",\n    \"add and provision 5 devices to fabric 'ProductionFabric'\",\n    \"create fabric 'DemoFabric' with network hierarchy and provision devices\",\n    \"login to cluster and verify home page accessibility\"\n  ];\n\n  // API calls to your existing backend\n  const executeTest = async () => {\n    if (!instruction.trim() || !clusterConfig.ip || !clusterConfig.username) {\n      alert('Please fill in all required fields');\n      return;\n    }\n\n    setIsExecuting(true);\n    setTestSession(null);\n    setExecutionSteps([]);\n\n    try {\n      // Step 1: Parse test instructions using your existing endpoint\n      const parseResponse = await fetch('http://localhost:8000/parse_test_instructions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          prompt: instruction,\n          url: clusterConfig.url || `https://${clusterConfig.ip}`,\n          username: clusterConfig.username,\n          password: clusterConfig.password\n        })\n      });\n\n      if (!parseResponse.ok) {\n        throw new Error(`Failed to parse instructions: ${parseResponse.statusText}`);\n      }\n\n      const parseResult = await parseResponse.json();\n      console.log('Parse result:', parseResult);\n      \n      // Step 2: Execute the test plan\n      const sessionResponse = await fetch('http://localhost:8000/execute_test_plan', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          session_id: parseResult.session_id\n        })\n      });\n\n      if (!sessionResponse.ok) {\n        throw new Error(`Failed to execute test: ${sessionResponse.statusText}`);\n      }\n\n      const sessionResult = await sessionResponse.json();\n      console.log('Session result:', sessionResult);\n      \n      // Update UI with initial session info\n      setTestSession({\n        sessionId: parseResult.session_id,\n        status: 'parsing',\n        command: instruction,\n        workflows: parseResult.workflows || [],\n        errorMessage: undefined\n      });\n\n      // Step 3: Poll for execution status\n      pollExecutionStatus(parseResult.session_id);\n\n    } catch (error) {\n      console.error('Execution error:', error);\n      setTestSession({\n        sessionId: 'error',\n        status: 'failed',\n        command: instruction,\n        workflows: [],\n        errorMessage: error instanceof Error ? error.message : 'Unknown error occurred'\n      });\n    } finally {\n      setIsExecuting(false);\n    }\n  };\n\n  const pollExecutionStatus = async (sessionId: string) => {\n    const interval = setInterval(async () => {\n      try {\n        const response = await fetch('http://localhost:8000/get_session_status', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            session_id: sessionId\n          })\n        });\n        \n        if (response.ok) {\n          const status = await response.json();\n          console.log('Status update:', status);\n          setTestSession(prev => ({\n            ...prev,\n            sessionId: sessionId,\n            status: status.status || 'executing',\n            command: instruction,\n            workflows: status.workflows || prev?.workflows || [],\n            errorMessage: status.error_message\n          }));\n          \n          // Stop polling when test is complete\n          if (status.status === 'completed' || status.status === 'failed') {\n            clearInterval(interval);\n            if (status.steps) {\n              setExecutionSteps(status.steps);\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Status polling error:', error);\n        clearInterval(interval);\n      }\n    }, 3000); // Poll every 3 seconds\n\n    // Cleanup after 10 minutes\n    setTimeout(() => clearInterval(interval), 600000);\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'completed': return <CheckCircle className=\"w-5 h-5 text-green-500\" />;\n      case 'failed': return <XCircle className=\"w-5 h-5 text-red-500\" />;\n      case 'executing': return <Clock className=\"w-5 h-5 text-blue-500 animate-spin\" />;\n      default: return <Clock className=\"w-5 h-5 text-gray-500\" />;\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'completed': return 'bg-green-50 border-green-200 text-green-800';\n      case 'failed': return 'bg-red-50 border-red-200 text-red-800';\n      case 'executing': case 'parsing': case 'generating': return 'bg-blue-50 border-blue-200 text-blue-800';\n      default: return 'bg-gray-50 border-gray-200 text-gray-800';\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 p-6\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-4xl font-bold text-slate-800 mb-2\">\n            E2E Testing Agent\n          </h1>\n          <p className=\"text-slate-600 text-lg\">\n            Transform natural language commands into automated Playwright tests\n          </p>\n        </div>\n\n        {/* Main Interface */}\n        <div className=\"bg-white rounded-xl shadow-lg p-8 mb-6\">\n          {/* Test Instruction Input */}\n          <div className=\"mb-8\">\n            <label className=\"block text-sm font-semibold text-slate-700 mb-3\">\n              Test Instruction\n            </label>\n            <div className=\"relative\">\n              <textarea\n                value={instruction}\n                onChange={(e) => setInstruction(e.target.value)}\n                placeholder=\"Describe what you want to test in natural language...\"\n                className=\"w-full h-32 px-4 py-3 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none text-slate-700\"\n                disabled={isExecuting}\n              />\n              <button\n                onClick={() => setShowExamples(!showExamples)}\n                className=\"absolute top-3 right-3 p-2 text-slate-400 hover:text-slate-600 transition-colors\"\n                title=\"Show examples\"\n              >\n                <Lightbulb className=\"w-5 h-5\" />\n              </button>\n            </div>\n            \n            {/* Examples */}\n            {showExamples && (\n              <div className=\"mt-4 p-4 bg-slate-50 rounded-lg border border-slate-200\">\n                <h4 className=\"text-sm font-semibold text-slate-700 mb-3\">Example Instructions:</h4>\n                <div className=\"space-y-2\">\n                  {exampleInstructions.map((example, index) => (\n                    <button\n                      key={index}\n                      onClick={() => {\n                        setInstruction(example);\n                        setShowExamples(false);\n                      }}\n                      className=\"block w-full text-left p-2 text-sm text-slate-600 hover:bg-white hover:text-slate-800 rounded transition-colors\"\n                    >\n                      {example}\n                    </button>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Cluster Configuration */}\n          <div className=\"mb-8\">\n            <h3 className=\"text-lg font-semibold text-slate-700 mb-4\">Cluster Configuration</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-slate-600 mb-2\">\n                  <Globe className=\"w-4 h-4 inline mr-1\" />\n                  Cluster IP *\n                </label>\n                <input\n                  type=\"text\"\n                  value={clusterConfig.ip}\n                  onChange={(e) => setClusterConfig(prev => ({ ...prev, ip: e.target.value }))}\n                  placeholder=\"192.168.1.100\"\n                  className=\"w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  disabled={isExecuting}\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-slate-600 mb-2\">\n                  Base URL (optional)\n                </label>\n                <input\n                  type=\"text\"\n                  value={clusterConfig.url}\n                  onChange={(e) => setClusterConfig(prev => ({ ...prev, url: e.target.value }))}\n                  placeholder=\"https://cluster.example.com\"\n                  className=\"w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  disabled={isExecuting}\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-slate-600 mb-2\">\n                  <User className=\"w-4 h-4 inline mr-1\" />\n                  Username *\n                </label>\n                <input\n                  type=\"text\"\n                  value={clusterConfig.username}\n                  onChange={(e) => setClusterConfig(prev => ({ ...prev, username: e.target.value }))}\n                  placeholder=\"admin\"\n                  className=\"w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  disabled={isExecuting}\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-slate-600 mb-2\">\n                  <Lock className=\"w-4 h-4 inline mr-1\" />\n                  Password *\n                </label>\n                <input\n                  type=\"password\"\n                  value={clusterConfig.password}\n                  onChange={(e) => setClusterConfig(prev => ({ ...prev, password: e.target.value }))}\n                  placeholder=\"••••••••\"\n                  className=\"w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  disabled={isExecuting}\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Execute Button */}\n          <div className=\"text-center\">\n            <button\n              onClick={executeTest}\n              disabled={isExecuting || !instruction.trim() || !clusterConfig.ip || !clusterConfig.username}\n              className=\"inline-flex items-center px-8 py-4 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-all duration-200 transform hover:scale-105 disabled:transform-none\"\n            >\n              <Play className=\"w-5 h-5 mr-2\" />\n              {isExecuting ? 'Executing Test...' : 'Execute Test'}\n            </button>\n          </div>\n        </div>\n\n        {/* Test Results */}\n        {testSession && (\n          <div className=\"bg-white rounded-xl shadow-lg p-6\">\n            <h3 className=\"text-lg font-semibold text-slate-700 mb-4\">Test Execution Results</h3>\n            \n            {/* Status */}\n            <div className={`p-4 rounded-lg border mb-4 ${getStatusColor(testSession.status)}`}>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  {getStatusIcon(testSession.status)}\n                  <span className=\"ml-2 font-medium capitalize\">{testSession.status}</span>\n                </div>\n                <span className=\"text-sm\">Session: {testSession.sessionId}</span>\n              </div>\n              {testSession.errorMessage && (\n                <div className=\"mt-2 text-sm\">\n                  <AlertCircle className=\"w-4 h-4 inline mr-1\" />\n                  {testSession.errorMessage}\n                </div>\n              )}\n            </div>\n\n            {/* Command */}\n            <div className=\"mb-4\">\n              <h4 className=\"text-sm font-semibold text-slate-600 mb-2\">Command Executed:</h4>\n              <div className=\"p-3 bg-slate-50 rounded border text-sm text-slate-700\">\n                {testSession.command}\n              </div>\n            </div>\n\n            {/* Workflows */}\n            {testSession.workflows && testSession.workflows.length > 0 && (\n              <div className=\"mb-4\">\n                <h4 className=\"text-sm font-semibold text-slate-600 mb-2\">Detected Workflows:</h4>\n                <div className=\"flex flex-wrap gap-2\">\n                  {testSession.workflows.map((workflow, index) => (\n                    <span key={index} className=\"px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm\">\n                      {workflow}\n                    </span>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Execution Steps */}\n            {executionSteps.length > 0 && (\n              <div>\n                <h4 className=\"text-sm font-semibold text-slate-600 mb-2\">Execution Steps:</h4>\n                <div className=\"space-y-2\">\n                  {executionSteps.map((step, index) => (\n                    <div key={index} className=\"p-3 border border-slate-200 rounded\">\n                      <div className=\"flex items-center justify-between\">\n                        <span className=\"text-sm font-medium\">{step.workflow}</span>\n                        <span className={`px-2 py-1 rounded text-xs ${getStatusColor(step.status)}`}>\n                          {step.status}\n                        </span>\n                      </div>\n                      <div className=\"text-sm text-slate-600 mt-1\">{step.tddStep}</div>\n                      {step.errorDetails && (\n                        <div className=\"text-sm text-red-600 mt-1\">{step.errorDetails}</div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Footer */}\n        <div className=\"text-center mt-8 text-sm text-slate-500\">\n          <p>E2E Testing Agent - Intelligent test automation with natural language commands</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}