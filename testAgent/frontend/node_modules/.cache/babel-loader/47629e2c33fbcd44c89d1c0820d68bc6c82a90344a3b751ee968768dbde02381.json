{"ast":null,"code":"var _jsxFileName = \"/Users/varsaraf/Downloads/testAgent/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Play, Globe, User, Lock, Lightbulb, CheckCircle, XCircle, Clock, AlertCircle, HelpCircle } from 'lucide-react';\n\n// Types based on your backend models\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst E2ETestingAgent = () => {\n  _s();\n  const [instruction, setInstruction] = useState('');\n  const [clusterConfig, setClusterConfig] = useState({\n    ip: '',\n    username: '',\n    password: '',\n    url: ''\n  });\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [testSession, setTestSession] = useState(null);\n  const [executionSteps, setExecutionSteps] = useState([]);\n  const [showExamples, setShowExamples] = useState(false);\n\n  // Clarification state\n  const [showClarification, setShowClarification] = useState(false);\n  const [clarificationQuestion, setClarificationQuestion] = useState(null);\n  const [selectedOption, setSelectedOption] = useState('');\n\n  // Example instructions based on your templates\n  const exampleInstructions = [\"create network hierarchy with area 'TestArea' and building 'TestBuilding'\", \"create 3 L3VN for fabric 'TestFabric'\", \"add and provision 5 devices to fabric 'ProductionFabric'\", \"create fabric 'DemoFabric' with network hierarchy and provision devices\", \"login to cluster and verify home page accessibility\", \"create L3VN\",\n  // This will trigger clarification\n  \"provision devices to existing fabric\" // This might trigger clarification\n  ];\n\n  // Enhanced API calls with clarification support\n  const executeTest = async () => {\n    if (!instruction.trim() || !clusterConfig.ip || !clusterConfig.username) {\n      alert('Please fill in all required fields');\n      return;\n    }\n    setIsExecuting(true);\n    setTestSession(null);\n    setExecutionSteps([]);\n    setShowClarification(false);\n    try {\n      // Step 1: Parse test instructions\n      const parseResponse = await fetch('http://localhost:8000/parse_test_instructions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: instruction,\n          url: clusterConfig.url || `https://${clusterConfig.ip}`,\n          username: clusterConfig.username,\n          password: clusterConfig.password\n        })\n      });\n      if (!parseResponse.ok) {\n        throw new Error(`Failed to parse instructions: ${parseResponse.statusText}`);\n      }\n      const parseResult = await parseResponse.json();\n      console.log('Parse result:', parseResult);\n\n      // Step 2: Check if clarification is needed\n      if (parseResult.status === 'needs_clarification') {\n        console.log('Clarification needed:', parseResult.clarification);\n\n        // Show clarification dialog\n        setClarificationQuestion(parseResult.clarification);\n        setShowClarification(true);\n        setTestSession({\n          sessionId: parseResult.session_id,\n          status: 'needs_clarification',\n          command: instruction,\n          workflows: parseResult.detected_workflows || []\n        });\n        setIsExecuting(false);\n        return; // Wait for user clarification\n      }\n\n      // Step 3: No clarification needed, proceed with execution\n      await proceedWithExecution(parseResult.session_id, parseResult);\n    } catch (error) {\n      console.error('Execution error:', error);\n      setTestSession({\n        sessionId: 'error',\n        status: 'failed',\n        command: instruction,\n        workflows: [],\n        errorMessage: error instanceof Error ? error.message : 'Unknown error occurred'\n      });\n      setIsExecuting(false);\n    }\n  };\n  const handleClarificationResponse = async () => {\n    if (!selectedOption || !testSession || !clarificationQuestion) {\n      alert('Please select an option');\n      return;\n    }\n    setIsExecuting(true);\n    try {\n      // Send clarification response\n      const clarificationResponse = await fetch('http://localhost:8000/api/v1/provide_clarification', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session_id: testSession.sessionId,\n          clarification_response: {\n            type: clarificationQuestion.type,\n            choice: selectedOption\n          }\n        })\n      });\n      if (!clarificationResponse.ok) {\n        throw new Error(`Failed to process clarification: ${clarificationResponse.statusText}`);\n      }\n      const clarificationResult = await clarificationResponse.json();\n      console.log('Clarification result:', clarificationResult);\n\n      // Hide clarification dialog\n      setShowClarification(false);\n      setClarificationQuestion(null);\n      setSelectedOption('');\n\n      // Update session with resolved workflows\n      setTestSession(prev => ({\n        ...prev,\n        status: 'parsing',\n        workflows: clarificationResult.updated_workflows\n      }));\n\n      // Proceed with execution\n      await proceedWithExecution(testSession.sessionId, clarificationResult);\n    } catch (error) {\n      console.error('Clarification error:', error);\n      setTestSession(prev => ({\n        ...prev,\n        status: 'failed',\n        errorMessage: error instanceof Error ? error.message : 'Clarification failed'\n      }));\n      setIsExecuting(false);\n      setShowClarification(false);\n    }\n  };\n  const skipClarification = async () => {\n    if (!testSession) return;\n    setIsExecuting(true);\n    try {\n      const skipResponse = await fetch(`http://localhost:8000/api/v1/session/${testSession.sessionId}/skip_clarification`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!skipResponse.ok) {\n        throw new Error(`Failed to skip clarification: ${skipResponse.statusText}`);\n      }\n      const skipResult = await skipResponse.json();\n      console.log('Skip result:', skipResult);\n\n      // Hide clarification dialog\n      setShowClarification(false);\n      setClarificationQuestion(null);\n\n      // Update session\n      setTestSession(prev => ({\n        ...prev,\n        status: 'parsing',\n        workflows: skipResult.workflows\n      }));\n\n      // Proceed with execution\n      await proceedWithExecution(testSession.sessionId, skipResult);\n    } catch (error) {\n      console.error('Skip clarification error:', error);\n      setTestSession(prev => ({\n        ...prev,\n        status: 'failed',\n        errorMessage: error instanceof Error ? error.message : 'Skip clarification failed'\n      }));\n      setIsExecuting(false);\n      setShowClarification(false);\n    }\n  };\n  const proceedWithExecution = async (sessionId, parseResult) => {\n    try {\n      // Execute the test plan\n      const sessionResponse = await fetch('http://localhost:8000/execute_test_plan', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          session_id: sessionId\n        })\n      });\n      if (!sessionResponse.ok) {\n        throw new Error(`Failed to execute test: ${sessionResponse.statusText}`);\n      }\n      const sessionResult = await sessionResponse.json();\n      console.log('Session result:', sessionResult);\n\n      // Update UI with initial session info\n      setTestSession({\n        sessionId: sessionId,\n        status: 'executing',\n        command: instruction,\n        workflows: parseResult.workflows || parseResult.updated_workflows || [],\n        errorMessage: undefined\n      });\n\n      // Start polling for execution status\n      pollExecutionStatus(sessionId);\n    } catch (error) {\n      console.error('Execution error:', error);\n      setTestSession({\n        sessionId: sessionId,\n        status: 'failed',\n        command: instruction,\n        workflows: [],\n        errorMessage: error instanceof Error ? error.message : 'Execution failed'\n      });\n      setIsExecuting(false);\n    }\n  };\n  const pollExecutionStatus = async sessionId => {\n    const interval = setInterval(async () => {\n      try {\n        const response = await fetch('http://localhost:8000/get_session_status', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            session_id: sessionId\n          })\n        });\n        if (response.ok) {\n          const status = await response.json();\n          console.log('Status update:', status);\n          setTestSession(prev => ({\n            ...prev,\n            sessionId: sessionId,\n            status: status.status || 'executing',\n            command: instruction,\n            workflows: status.workflows || (prev === null || prev === void 0 ? void 0 : prev.workflows) || [],\n            errorMessage: status.error_message\n          }));\n\n          // Stop polling when test is complete\n          if (status.status === 'completed' || status.status === 'failed') {\n            clearInterval(interval);\n            setIsExecuting(false);\n            if (status.steps) {\n              setExecutionSteps(status.steps);\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Status polling error:', error);\n        clearInterval(interval);\n        setIsExecuting(false);\n      }\n    }, 3000); // Poll every 3 seconds\n\n    // Cleanup after 10 minutes\n    setTimeout(() => {\n      clearInterval(interval);\n      setIsExecuting(false);\n    }, 600000);\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'completed':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"w-5 h-5 text-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 32\n        }, this);\n      case 'failed':\n        return /*#__PURE__*/_jsxDEV(XCircle, {\n          className: \"w-5 h-5 text-red-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 29\n        }, this);\n      case 'executing':\n      case 'generating':\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          className: \"w-5 h-5 text-blue-500 animate-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 51\n        }, this);\n      case 'needs_clarification':\n        return /*#__PURE__*/_jsxDEV(HelpCircle, {\n          className: \"w-5 h-5 text-orange-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 42\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Clock, {\n          className: \"w-5 h-5 text-gray-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 23\n        }, this);\n    }\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'completed':\n        return 'bg-green-50 border-green-200 text-green-800';\n      case 'failed':\n        return 'bg-red-50 border-red-200 text-red-800';\n      case 'needs_clarification':\n        return 'bg-orange-50 border-orange-200 text-orange-800';\n      case 'executing':\n      case 'parsing':\n      case 'generating':\n        return 'bg-blue-50 border-blue-200 text-blue-800';\n      default:\n        return 'bg-gray-50 border-gray-200 text-gray-800';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold text-slate-800 mb-2\",\n          children: \"E2E Testing Agent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-slate-600 text-lg\",\n          children: \"Transform natural language commands into automated Playwright tests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-xl shadow-lg p-8 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-semibold text-slate-700 mb-3\",\n            children: \"Test Instruction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: instruction,\n              onChange: e => setInstruction(e.target.value),\n              placeholder: \"Describe what you want to test in natural language...\",\n              className: \"w-full h-32 px-4 py-3 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none text-slate-700\",\n              disabled: isExecuting\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowExamples(!showExamples),\n              className: \"absolute top-3 right-3 p-2 text-slate-400 hover:text-slate-600 transition-colors\",\n              title: \"Show examples\",\n              children: /*#__PURE__*/_jsxDEV(Lightbulb, {\n                className: \"w-5 h-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), showExamples && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 p-4 bg-slate-50 rounded-lg border border-slate-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-sm font-semibold text-slate-700 mb-3\",\n              children: \"Example Instructions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: exampleInstructions.map((example, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setInstruction(example);\n                  setShowExamples(false);\n                },\n                className: \"block w-full text-left p-2 text-sm text-slate-600 hover:bg-white hover:text-slate-800 rounded transition-colors\",\n                children: [example, example.includes('create L3VN') && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-xs text-orange-600 ml-2\",\n                  children: \"(needs clarification)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-slate-700 mb-4\",\n            children: \"Cluster Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-slate-600 mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(Globe, {\n                  className: \"w-4 h-4 inline mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 19\n                }, this), \"Cluster IP *\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: clusterConfig.ip,\n                onChange: e => setClusterConfig(prev => ({\n                  ...prev,\n                  ip: e.target.value\n                })),\n                placeholder: \"192.168.1.100\",\n                className: \"w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n                disabled: isExecuting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-slate-600 mb-2\",\n                children: \"Base URL (optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: clusterConfig.url,\n                onChange: e => setClusterConfig(prev => ({\n                  ...prev,\n                  url: e.target.value\n                })),\n                placeholder: \"https://cluster.example.com\",\n                className: \"w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n                disabled: isExecuting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-slate-600 mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(User, {\n                  className: \"w-4 h-4 inline mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 19\n                }, this), \"Username *\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: clusterConfig.username,\n                onChange: e => setClusterConfig(prev => ({\n                  ...prev,\n                  username: e.target.value\n                })),\n                placeholder: \"admin\",\n                className: \"w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n                disabled: isExecuting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-slate-600 mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(Lock, {\n                  className: \"w-4 h-4 inline mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 19\n                }, this), \"Password *\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                value: clusterConfig.password,\n                onChange: e => setClusterConfig(prev => ({\n                  ...prev,\n                  password: e.target.value\n                })),\n                placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n                className: \"w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n                disabled: isExecuting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: executeTest,\n            disabled: isExecuting || !instruction.trim() || !clusterConfig.ip || !clusterConfig.username,\n            className: \"inline-flex items-center px-8 py-4 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-all duration-200 transform hover:scale-105 disabled:transform-none\",\n            children: [/*#__PURE__*/_jsxDEV(Play, {\n              className: \"w-5 h-5 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 15\n            }, this), isExecuting ? 'Executing Test...' : 'Execute Test']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), showClarification && clarificationQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-xl shadow-lg p-6 mb-6 border-l-4 border-orange-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(HelpCircle, {\n            className: \"w-6 h-6 text-orange-500 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-semibold text-slate-700\",\n            children: \"Clarification Needed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-slate-600 mb-4\",\n          children: clarificationQuestion.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3 mb-6\",\n          children: clarificationQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"flex items-start space-x-3 cursor-pointer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"clarification\",\n              value: option.value,\n              checked: selectedOption === option.value,\n              onChange: e => setSelectedOption(e.target.value),\n              className: \"mt-1 text-blue-600 focus:ring-blue-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-medium text-slate-700\",\n                children: option.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 21\n              }, this), option.description && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-slate-500 mt-1\",\n                children: option.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 19\n            }, this)]\n          }, option.value, true, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClarificationResponse,\n            disabled: !selectedOption || isExecuting,\n            className: \"flex-1 px-4 py-2 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors\",\n            children: isExecuting ? 'Processing...' : 'Continue'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: skipClarification,\n            disabled: isExecuting,\n            className: \"px-4 py-2 bg-gray-200 text-gray-700 font-medium rounded-lg hover:bg-gray-300 disabled:bg-gray-100 disabled:cursor-not-allowed transition-colors\",\n            children: \"Use Defaults\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 11\n      }, this), testSession && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-xl shadow-lg p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold text-slate-700 mb-4\",\n          children: \"Test Execution Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-4 rounded-lg border mb-4 ${getStatusColor(testSession.status)}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [getStatusIcon(testSession.status), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 font-medium capitalize\",\n                children: testSession.status.replace('_', ' ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm\",\n              children: [\"Session: \", testSession.sessionId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 15\n          }, this), testSession.errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n              className: \"w-4 h-4 inline mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 19\n            }, this), testSession.errorMessage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-sm font-semibold text-slate-600 mb-2\",\n            children: \"Command Executed:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 bg-slate-50 rounded border text-sm text-slate-700\",\n            children: testSession.command\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 13\n        }, this), testSession.workflows && testSession.workflows.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-sm font-semibold text-slate-600 mb-2\",\n            children: \"Detected Workflows:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-2\",\n            children: testSession.workflows.map((workflow, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm\",\n              children: workflow.replace('_', ' ')\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 15\n        }, this), executionSteps.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-sm font-semibold text-slate-600 mb-2\",\n            children: \"Execution Steps:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: executionSteps.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-3 border border-slate-200 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm font-medium\",\n                  children: step.workflow\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 598,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `px-2 py-1 rounded text-xs ${getStatusColor(step.status)}`,\n                  children: step.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 599,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-slate-600 mt-1\",\n                children: step.tddStep\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 23\n              }, this), step.errorDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-red-600 mt-1\",\n                children: step.errorDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mt-8 text-sm text-slate-500\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"E2E Testing Agent - Intelligent test automation with natural language commands\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 358,\n    columnNumber: 5\n  }, this);\n};\n_s(E2ETestingAgent, \"co5LoG+bx8SBjGwl24ffVUsgMks=\");\n_c = E2ETestingAgent;\nexport default E2ETestingAgent;\nvar _c;\n$RefreshReg$(_c, \"E2ETestingAgent\");","map":{"version":3,"names":["React","useState","Play","Globe","User","Lock","Lightbulb","CheckCircle","XCircle","Clock","AlertCircle","HelpCircle","jsxDEV","_jsxDEV","E2ETestingAgent","_s","instruction","setInstruction","clusterConfig","setClusterConfig","ip","username","password","url","isExecuting","setIsExecuting","testSession","setTestSession","executionSteps","setExecutionSteps","showExamples","setShowExamples","showClarification","setShowClarification","clarificationQuestion","setClarificationQuestion","selectedOption","setSelectedOption","exampleInstructions","executeTest","trim","alert","parseResponse","fetch","method","headers","body","JSON","stringify","prompt","ok","Error","statusText","parseResult","json","console","log","status","clarification","sessionId","session_id","command","workflows","detected_workflows","proceedWithExecution","error","errorMessage","message","handleClarificationResponse","clarificationResponse","clarification_response","type","choice","clarificationResult","prev","updated_workflows","skipClarification","skipResponse","skipResult","sessionResponse","sessionResult","undefined","pollExecutionStatus","interval","setInterval","response","error_message","clearInterval","steps","setTimeout","getStatusIcon","className","fileName","_jsxFileName","lineNumber","columnNumber","getStatusColor","children","value","onChange","e","target","placeholder","disabled","onClick","title","map","example","index","includes","options","option","name","checked","label","description","replace","length","workflow","step","tddStep","errorDetails","_c","$RefreshReg$"],"sources":["/Users/varsaraf/Downloads/testAgent/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Play, Globe, User, Lock, Lightbulb, CheckCircle, XCircle, Clock, AlertCircle, HelpCircle } from 'lucide-react';\n\n// Types based on your backend models\ninterface ClusterConfig {\n  ip: string;\n  username: string;\n  password: string;\n  url: string;\n}\n\ninterface TestSession {\n  sessionId: string;\n  status: 'created' | 'parsing' | 'needs_clarification' | 'generating' | 'executing' | 'completed' | 'failed';\n  command: string;\n  workflows: string[];\n  errorMessage?: string;\n}\n\ninterface ExecutionStep {\n  stepId: string;\n  workflow: string;\n  tddStep: string;\n  status: string;\n  timestamp: string;\n  errorDetails?: string;\n}\n\ninterface ClarificationOption {\n  value: string;\n  label: string;\n  description?: string;\n  data?: any;\n}\n\ninterface ClarificationQuestion {\n  type: string;\n  message: string;\n  options: ClarificationOption[];\n  workflow_context: string;\n  parameter_name?: string;\n}\n\nconst E2ETestingAgent: React.FC = () => {\n  const [instruction, setInstruction] = useState('');\n  const [clusterConfig, setClusterConfig] = useState<ClusterConfig>({\n    ip: '',\n    username: '',\n    password: '',\n    url: ''\n  });\n  const [isExecuting, setIsExecuting] = useState(false);\n  const [testSession, setTestSession] = useState<TestSession | null>(null);\n  const [executionSteps, setExecutionSteps] = useState<ExecutionStep[]>([]);\n  const [showExamples, setShowExamples] = useState(false);\n  \n  // Clarification state\n  const [showClarification, setShowClarification] = useState(false);\n  const [clarificationQuestion, setClarificationQuestion] = useState<ClarificationQuestion | null>(null);\n  const [selectedOption, setSelectedOption] = useState<string>('');\n\n  // Example instructions based on your templates\n  const exampleInstructions = [\n    \"create network hierarchy with area 'TestArea' and building 'TestBuilding'\",\n    \"create 3 L3VN for fabric 'TestFabric'\",\n    \"add and provision 5 devices to fabric 'ProductionFabric'\",\n    \"create fabric 'DemoFabric' with network hierarchy and provision devices\",\n    \"login to cluster and verify home page accessibility\",\n    \"create L3VN\",  // This will trigger clarification\n    \"provision devices to existing fabric\"  // This might trigger clarification\n  ];\n\n  // Enhanced API calls with clarification support\n  const executeTest = async () => {\n    if (!instruction.trim() || !clusterConfig.ip || !clusterConfig.username) {\n      alert('Please fill in all required fields');\n      return;\n    }\n\n    setIsExecuting(true);\n    setTestSession(null);\n    setExecutionSteps([]);\n    setShowClarification(false);\n\n    try {\n      // Step 1: Parse test instructions\n      const parseResponse = await fetch('http://localhost:8000/parse_test_instructions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          prompt: instruction,\n          url: clusterConfig.url || `https://${clusterConfig.ip}`,\n          username: clusterConfig.username,\n          password: clusterConfig.password\n        })\n      });\n\n      if (!parseResponse.ok) {\n        throw new Error(`Failed to parse instructions: ${parseResponse.statusText}`);\n      }\n\n      const parseResult = await parseResponse.json();\n      console.log('Parse result:', parseResult);\n      \n      // Step 2: Check if clarification is needed\n      if (parseResult.status === 'needs_clarification') {\n        console.log('Clarification needed:', parseResult.clarification);\n        \n        // Show clarification dialog\n        setClarificationQuestion(parseResult.clarification);\n        setShowClarification(true);\n        setTestSession({\n          sessionId: parseResult.session_id,\n          status: 'needs_clarification',\n          command: instruction,\n          workflows: parseResult.detected_workflows || [],\n        });\n        setIsExecuting(false);\n        return; // Wait for user clarification\n      }\n      \n      // Step 3: No clarification needed, proceed with execution\n      await proceedWithExecution(parseResult.session_id, parseResult);\n      \n    } catch (error) {\n      console.error('Execution error:', error);\n      setTestSession({\n        sessionId: 'error',\n        status: 'failed',\n        command: instruction,\n        workflows: [],\n        errorMessage: error instanceof Error ? error.message : 'Unknown error occurred'\n      });\n      setIsExecuting(false);\n    }\n  };\n\n  const handleClarificationResponse = async () => {\n    if (!selectedOption || !testSession || !clarificationQuestion) {\n      alert('Please select an option');\n      return;\n    }\n\n    setIsExecuting(true);\n    \n    try {\n      // Send clarification response\n      const clarificationResponse = await fetch('http://localhost:8000/api/v1/provide_clarification', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          session_id: testSession.sessionId,\n          clarification_response: {\n            type: clarificationQuestion.type,\n            choice: selectedOption\n          }\n        })\n      });\n\n      if (!clarificationResponse.ok) {\n        throw new Error(`Failed to process clarification: ${clarificationResponse.statusText}`);\n      }\n\n      const clarificationResult = await clarificationResponse.json();\n      console.log('Clarification result:', clarificationResult);\n\n      // Hide clarification dialog\n      setShowClarification(false);\n      setClarificationQuestion(null);\n      setSelectedOption('');\n\n      // Update session with resolved workflows\n      setTestSession(prev => ({\n        ...prev!,\n        status: 'parsing',\n        workflows: clarificationResult.updated_workflows,\n      }));\n\n      // Proceed with execution\n      await proceedWithExecution(testSession.sessionId, clarificationResult);\n      \n    } catch (error) {\n      console.error('Clarification error:', error);\n      setTestSession(prev => ({\n        ...prev!,\n        status: 'failed',\n        errorMessage: error instanceof Error ? error.message : 'Clarification failed'\n      }));\n      setIsExecuting(false);\n      setShowClarification(false);\n    }\n  };\n\n  const skipClarification = async () => {\n    if (!testSession) return;\n\n    setIsExecuting(true);\n    \n    try {\n      const skipResponse = await fetch(`http://localhost:8000/api/v1/session/${testSession.sessionId}/skip_clarification`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n\n      if (!skipResponse.ok) {\n        throw new Error(`Failed to skip clarification: ${skipResponse.statusText}`);\n      }\n\n      const skipResult = await skipResponse.json();\n      console.log('Skip result:', skipResult);\n\n      // Hide clarification dialog\n      setShowClarification(false);\n      setClarificationQuestion(null);\n\n      // Update session\n      setTestSession(prev => ({\n        ...prev!,\n        status: 'parsing',\n        workflows: skipResult.workflows,\n      }));\n\n      // Proceed with execution\n      await proceedWithExecution(testSession.sessionId, skipResult);\n      \n    } catch (error) {\n      console.error('Skip clarification error:', error);\n      setTestSession(prev => ({\n        ...prev!,\n        status: 'failed',\n        errorMessage: error instanceof Error ? error.message : 'Skip clarification failed'\n      }));\n      setIsExecuting(false);\n      setShowClarification(false);\n    }\n  };\n\n  const proceedWithExecution = async (sessionId: string, parseResult: any) => {\n    try {\n      // Execute the test plan\n      const sessionResponse = await fetch('http://localhost:8000/execute_test_plan', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          session_id: sessionId\n        })\n      });\n\n      if (!sessionResponse.ok) {\n        throw new Error(`Failed to execute test: ${sessionResponse.statusText}`);\n      }\n\n      const sessionResult = await sessionResponse.json();\n      console.log('Session result:', sessionResult);\n      \n      // Update UI with initial session info\n      setTestSession({\n        sessionId: sessionId,\n        status: 'executing',\n        command: instruction,\n        workflows: parseResult.workflows || parseResult.updated_workflows || [],\n        errorMessage: undefined\n      });\n\n      // Start polling for execution status\n      pollExecutionStatus(sessionId);\n\n    } catch (error) {\n      console.error('Execution error:', error);\n      setTestSession({\n        sessionId: sessionId,\n        status: 'failed',\n        command: instruction,\n        workflows: [],\n        errorMessage: error instanceof Error ? error.message : 'Execution failed'\n      });\n      setIsExecuting(false);\n    }\n  };\n\n  const pollExecutionStatus = async (sessionId: string) => {\n    const interval = setInterval(async () => {\n      try {\n        const response = await fetch('http://localhost:8000/get_session_status', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            session_id: sessionId\n          })\n        });\n        \n        if (response.ok) {\n          const status = await response.json();\n          console.log('Status update:', status);\n          setTestSession(prev => ({\n            ...prev!,\n            sessionId: sessionId,\n            status: status.status || 'executing',\n            command: instruction,\n            workflows: status.workflows || prev?.workflows || [],\n            errorMessage: status.error_message\n          }));\n          \n          // Stop polling when test is complete\n          if (status.status === 'completed' || status.status === 'failed') {\n            clearInterval(interval);\n            setIsExecuting(false);\n            if (status.steps) {\n              setExecutionSteps(status.steps);\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Status polling error:', error);\n        clearInterval(interval);\n        setIsExecuting(false);\n      }\n    }, 3000); // Poll every 3 seconds\n\n    // Cleanup after 10 minutes\n    setTimeout(() => {\n      clearInterval(interval);\n      setIsExecuting(false);\n    }, 600000);\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'completed': return <CheckCircle className=\"w-5 h-5 text-green-500\" />;\n      case 'failed': return <XCircle className=\"w-5 h-5 text-red-500\" />;\n      case 'executing': case 'generating': return <Clock className=\"w-5 h-5 text-blue-500 animate-spin\" />;\n      case 'needs_clarification': return <HelpCircle className=\"w-5 h-5 text-orange-500\" />;\n      default: return <Clock className=\"w-5 h-5 text-gray-500\" />;\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'completed': return 'bg-green-50 border-green-200 text-green-800';\n      case 'failed': return 'bg-red-50 border-red-200 text-red-800';\n      case 'needs_clarification': return 'bg-orange-50 border-orange-200 text-orange-800';\n      case 'executing': case 'parsing': case 'generating': return 'bg-blue-50 border-blue-200 text-blue-800';\n      default: return 'bg-gray-50 border-gray-200 text-gray-800';\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 p-6\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-4xl font-bold text-slate-800 mb-2\">\n            E2E Testing Agent\n          </h1>\n          <p className=\"text-slate-600 text-lg\">\n            Transform natural language commands into automated Playwright tests\n          </p>\n        </div>\n\n        {/* Main Interface */}\n        <div className=\"bg-white rounded-xl shadow-lg p-8 mb-6\">\n          {/* Test Instruction Input */}\n          <div className=\"mb-8\">\n            <label className=\"block text-sm font-semibold text-slate-700 mb-3\">\n              Test Instruction\n            </label>\n            <div className=\"relative\">\n              <textarea\n                value={instruction}\n                onChange={(e) => setInstruction(e.target.value)}\n                placeholder=\"Describe what you want to test in natural language...\"\n                className=\"w-full h-32 px-4 py-3 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none text-slate-700\"\n                disabled={isExecuting}\n              />\n              <button\n                onClick={() => setShowExamples(!showExamples)}\n                className=\"absolute top-3 right-3 p-2 text-slate-400 hover:text-slate-600 transition-colors\"\n                title=\"Show examples\"\n              >\n                <Lightbulb className=\"w-5 h-5\" />\n              </button>\n            </div>\n            \n            {/* Examples */}\n            {showExamples && (\n              <div className=\"mt-4 p-4 bg-slate-50 rounded-lg border border-slate-200\">\n                <h4 className=\"text-sm font-semibold text-slate-700 mb-3\">Example Instructions:</h4>\n                <div className=\"space-y-2\">\n                  {exampleInstructions.map((example, index) => (\n                    <button\n                      key={index}\n                      onClick={() => {\n                        setInstruction(example);\n                        setShowExamples(false);\n                      }}\n                      className=\"block w-full text-left p-2 text-sm text-slate-600 hover:bg-white hover:text-slate-800 rounded transition-colors\"\n                    >\n                      {example}\n                      {example.includes('create L3VN') && (\n                        <span className=\"text-xs text-orange-600 ml-2\">(needs clarification)</span>\n                      )}\n                    </button>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Cluster Configuration */}\n          <div className=\"mb-8\">\n            <h3 className=\"text-lg font-semibold text-slate-700 mb-4\">Cluster Configuration</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-slate-600 mb-2\">\n                  <Globe className=\"w-4 h-4 inline mr-1\" />\n                  Cluster IP *\n                </label>\n                <input\n                  type=\"text\"\n                  value={clusterConfig.ip}\n                  onChange={(e) => setClusterConfig(prev => ({ ...prev, ip: e.target.value }))}\n                  placeholder=\"192.168.1.100\"\n                  className=\"w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  disabled={isExecuting}\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-slate-600 mb-2\">\n                  Base URL (optional)\n                </label>\n                <input\n                  type=\"text\"\n                  value={clusterConfig.url}\n                  onChange={(e) => setClusterConfig(prev => ({ ...prev, url: e.target.value }))}\n                  placeholder=\"https://cluster.example.com\"\n                  className=\"w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  disabled={isExecuting}\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-slate-600 mb-2\">\n                  <User className=\"w-4 h-4 inline mr-1\" />\n                  Username *\n                </label>\n                <input\n                  type=\"text\"\n                  value={clusterConfig.username}\n                  onChange={(e) => setClusterConfig(prev => ({ ...prev, username: e.target.value }))}\n                  placeholder=\"admin\"\n                  className=\"w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  disabled={isExecuting}\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-slate-600 mb-2\">\n                  <Lock className=\"w-4 h-4 inline mr-1\" />\n                  Password *\n                </label>\n                <input\n                  type=\"password\"\n                  value={clusterConfig.password}\n                  onChange={(e) => setClusterConfig(prev => ({ ...prev, password: e.target.value }))}\n                  placeholder=\"••••••••\"\n                  className=\"w-full px-3 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  disabled={isExecuting}\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Execute Button */}\n          <div className=\"text-center\">\n            <button\n              onClick={executeTest}\n              disabled={isExecuting || !instruction.trim() || !clusterConfig.ip || !clusterConfig.username}\n              className=\"inline-flex items-center px-8 py-4 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-all duration-200 transform hover:scale-105 disabled:transform-none\"\n            >\n              <Play className=\"w-5 h-5 mr-2\" />\n              {isExecuting ? 'Executing Test...' : 'Execute Test'}\n            </button>\n          </div>\n        </div>\n\n        {/* Clarification Dialog */}\n        {showClarification && clarificationQuestion && (\n          <div className=\"bg-white rounded-xl shadow-lg p-6 mb-6 border-l-4 border-orange-500\">\n            <div className=\"flex items-center mb-4\">\n              <HelpCircle className=\"w-6 h-6 text-orange-500 mr-2\" />\n              <h3 className=\"text-lg font-semibold text-slate-700\">Clarification Needed</h3>\n            </div>\n            \n            <p className=\"text-slate-600 mb-4\">{clarificationQuestion.message}</p>\n            \n            <div className=\"space-y-3 mb-6\">\n              {clarificationQuestion.options.map((option, index) => (\n                <label key={option.value} className=\"flex items-start space-x-3 cursor-pointer\">\n                  <input\n                    type=\"radio\"\n                    name=\"clarification\"\n                    value={option.value}\n                    checked={selectedOption === option.value}\n                    onChange={(e) => setSelectedOption(e.target.value)}\n                    className=\"mt-1 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <div className=\"flex-1\">\n                    <div className=\"font-medium text-slate-700\">{option.label}</div>\n                    {option.description && (\n                      <div className=\"text-sm text-slate-500 mt-1\">{option.description}</div>\n                    )}\n                  </div>\n                </label>\n              ))}\n            </div>\n            \n            <div className=\"flex space-x-3\">\n              <button\n                onClick={handleClarificationResponse}\n                disabled={!selectedOption || isExecuting}\n                className=\"flex-1 px-4 py-2 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors\"\n              >\n                {isExecuting ? 'Processing...' : 'Continue'}\n              </button>\n              <button\n                onClick={skipClarification}\n                disabled={isExecuting}\n                className=\"px-4 py-2 bg-gray-200 text-gray-700 font-medium rounded-lg hover:bg-gray-300 disabled:bg-gray-100 disabled:cursor-not-allowed transition-colors\"\n              >\n                Use Defaults\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Test Results */}\n        {testSession && (\n          <div className=\"bg-white rounded-xl shadow-lg p-6\">\n            <h3 className=\"text-lg font-semibold text-slate-700 mb-4\">Test Execution Results</h3>\n            \n            {/* Status */}\n            <div className={`p-4 rounded-lg border mb-4 ${getStatusColor(testSession.status)}`}>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  {getStatusIcon(testSession.status)}\n                  <span className=\"ml-2 font-medium capitalize\">\n                    {testSession.status.replace('_', ' ')}\n                  </span>\n                </div>\n                <span className=\"text-sm\">Session: {testSession.sessionId}</span>\n              </div>\n              {testSession.errorMessage && (\n                <div className=\"mt-2 text-sm\">\n                  <AlertCircle className=\"w-4 h-4 inline mr-1\" />\n                  {testSession.errorMessage}\n                </div>\n              )}\n            </div>\n\n            {/* Command */}\n            <div className=\"mb-4\">\n              <h4 className=\"text-sm font-semibold text-slate-600 mb-2\">Command Executed:</h4>\n              <div className=\"p-3 bg-slate-50 rounded border text-sm text-slate-700\">\n                {testSession.command}\n              </div>\n            </div>\n\n            {/* Workflows */}\n            {testSession.workflows && testSession.workflows.length > 0 && (\n              <div className=\"mb-4\">\n                <h4 className=\"text-sm font-semibold text-slate-600 mb-2\">Detected Workflows:</h4>\n                <div className=\"flex flex-wrap gap-2\">\n                  {testSession.workflows.map((workflow, index) => (\n                    <span key={index} className=\"px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm\">\n                      {workflow.replace('_', ' ')}\n                    </span>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* Execution Steps */}\n            {executionSteps.length > 0 && (\n              <div>\n                <h4 className=\"text-sm font-semibold text-slate-600 mb-2\">Execution Steps:</h4>\n                <div className=\"space-y-2\">\n                  {executionSteps.map((step, index) => (\n                    <div key={index} className=\"p-3 border border-slate-200 rounded\">\n                      <div className=\"flex items-center justify-between\">\n                        <span className=\"text-sm font-medium\">{step.workflow}</span>\n                        <span className={`px-2 py-1 rounded text-xs ${getStatusColor(step.status)}`}>\n                          {step.status}\n                        </span>\n                      </div>\n                      <div className=\"text-sm text-slate-600 mt-1\">{step.tddStep}</div>\n                      {step.errorDetails && (\n                        <div className=\"text-sm text-red-600 mt-1\">{step.errorDetails}</div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Footer */}\n        <div className=\"text-center mt-8 text-sm text-slate-500\">\n          <p>E2E Testing Agent - Intelligent test automation with natural language commands</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default E2ETestingAgent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}